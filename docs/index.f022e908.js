async function e(){let e=prompt("Enter your email for registration:");if(!e){alert("Email is required for biometric registration.");return}let t={challenge:new Uint8Array(32),rp:{name:"Habit Tracker"},user:{id:new TextEncoder().encode(e),name:e,displayName:"User"},pubKeyCredParams:[{type:"public-key",alg:-7}],authenticatorSelection:{userVerification:"required"},timeout:6e4,attestation:"direct"};try{let r=await navigator.credentials.create({publicKey:t}),i=btoa(String.fromCharCode(...new Uint8Array(r.rawId)));localStorage.setItem("biometricKey",JSON.stringify({id:i,email:e})),localStorage.setItem("email",JSON.stringify(e)),alert("Biometric registration successful!")}catch(e){console.error("Biometric registration failed:",e),alert("Biometric registration failed. Try again.")}}async function t(){let e=JSON.parse(localStorage.getItem("biometricKey"));if(!e){alert("No biometric data found. Please register first.");return}let t={challenge:new Uint8Array(32),allowCredentials:[{id:function(e){let t="=".repeat((4-e.length%4)%4),r=(e+t).replace(/-/g,"+").replace(/_/g,"/"),i=window.atob(r),a=new Uint8Array(i.length);for(let e=0;e<i.length;++e)a[e]=i.charCodeAt(e);return a}(e.id),type:"public-key"}],userVerification:"required",timeout:6e4};try{let e=await navigator.credentials.get({publicKey:t});localStorage.setItem("authenticatedUser",JSON.stringify(e)),alert("Authentication successful!"),window.location.href="habits.html"}catch(e){console.error("Authentication failed:",e),alert("Authentication failed. Try again.")}}document.getElementById("registerBiometric").addEventListener("click",e),document.getElementById("signIn").addEventListener("click",t);
//# sourceMappingURL=index.f022e908.js.map
